@startuml c1
Class01 <|-- Class02
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 -- Class10
@enduml

@startuml c2
Class11 <|.. Class12
Class13 --> Class14
Class15 ..> Class16
Class17 ..|> Class18
Class19 <--* Class20
@enduml

@startuml c3
Class01 "1" *-- "many" Class02 : contains
Class03 o-- Class04 : aggregation
Class05 --> "1" Class06
@enduml

@startuml  c4
class Dummy {
  String data void methods()
}

class Flight {
  flightNumber : Integer
  departureTime : Date
}
@enduml

@startuml c5
class Dummy {
  {field} A field (despite parentheses)
  {method} Some method
}
@enduml

' visbility
' - private
' # protected
' ~ package protected
' + public
@startuml c6
class Dummy {
  -field1
  #field2
  ~method1()
  +method2()
}
@enduml

' turn off icon
@startuml c7
skinparam classAttributeIconSize 0
class Dummy {
  -field1
  #field2
  ~method1()
  +method2()
}
@enduml

@startuml c8
class Dummy {
  {static} String id
  {abstract} void methods()
}
@enduml

@startuml c9
class Foo1 {
  You can use
  several lines
  ..
  as you want
  and group
  ==
  things together.
  __
  You can have as many groups as you want
  --
  End of class
}

class User {
  .. Simple Getter ..
  + getName()
  + getAddress()
  .. Some setter ..
  + setName()
  __ private data __
  int age
  -- encrypted --
  String password
}
@enduml

@startuml c10
class Object << general >>
Object <|--- ArrayList
note top of Object : In java, every class\nextends this one.
note "This is a floating note" as N1
note "This note is connected\nto several objects." as N2
Object .. N2
N2 .. ArrayList
class Foo
note left: On last defined class
@enduml

@startuml c11
class Foo
note left: On last defined class
note top of Object
  In java, <size:18>every</size> <u>class</u> <b>extends</b>
  <i>this</i> one.
end note
note as N1
This note is <u>also</u> <b><color:royalBlue>on several</color> <s>words</s> lines
And this is hosted by <img:../lib/avatar.png>
end note
@enduml

@startuml c12
abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection
List <|-- AbstractList
Collection <|-- AbstractCollection
Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList
class ArrayList {
  Object[] elementData size()
}
enum TimeUnit {
  DAYS
  HOURS
  MINUTES
}
annotation SuppressWarnings
@enduml

@startuml c13
package "Classic Collections" #DDDDDD {
  Object <|-- ArrayList
}

package net.sourceforge.plantuml {
  Object <|-- Demo1
  Demo1 *- Demo2
}
@enduml

@startuml c14
' Split into 4 pages
page 2x2
skinparam pageMargin 10
skinparam pageExternalColor gray
skinparam pageBorderColor black
class BaseClass
namespace net.dummy #DDDDDD {
  .BaseClass <|-- Person
  Meeting o-- Person
  .BaseClass <|- Meeting
}
namespace net.foo {
  net.dummy.Person <|- Person
  .BaseClass <|-- Person
  net.dummy.Meeting o-- Person
}
BaseClass <|-- net.unused.Person
@enduml
